name: SAPience n8n Integration

on:
  repository_dispatch:
    types: [sapience-auto-test]
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]

env:
  N8N_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
  notify-n8n-start:
    runs-on: ubuntu-latest
    name: üöÄ Notify n8n Workflow Start
    steps:
    - name: Send Build Start to n8n
      run: |
        if [ ! -z "${{ env.N8N_WEBHOOK_URL }}" ]; then
          curl -X POST "${{ env.N8N_WEBHOOK_URL }}/build-started" \
            -H "Content-Type: application/json" \
            -d '{
              "platform": "SAPience ML Platform v2.0",
              "event_type": "${{ github.event_name }}",
              "repository": "${{ github.repository }}",
              "ref": "${{ github.ref }}",
              "commit_sha": "${{ github.sha }}",
              "actor": "${{ github.actor }}",
              "pr_number": "${{ github.event.number }}",
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
            }' || echo "n8n webhook failed - continuing"
        else
          echo "N8N_WEBHOOK_URL not configured - skipping notification"
        fi

  build-and-test:
    needs: notify-n8n-start
    runs-on: ubuntu-latest
    name: üî® Build & Test SAPience
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: |
        npm run lint || echo "No lint script"
        if [ -f "tsconfig.json" ]; then
          npm run type-check || npx tsc --noEmit || echo "Type check failed"
        fi
        
    - name: Build SAPience ML Platform
      run: |
        echo "üöÄ Building SAPience ML Platform..."
        npm run build
        echo "‚úÖ Build completed"
        
    - name: Test SAPience Components
      run: |
        echo "üß™ Testing SAPience ML Platform components..."
        
        # Test new SAPience components exist
        components=(
          "components/dashboard-preview.jsx"
          "components/feature-grid.jsx" 
          "components/metrics-section.jsx"
          "components/pricing-section.jsx"
          "app/integrations/page.jsx"
          "app/demo/page.jsx"
        )
        
        for component in "${components[@]}"; do
          if [ -f "$component" ]; then
            echo "‚úÖ $component exists"
          else
            echo "‚ö†Ô∏è  $component missing (expected for new SAPience features)"
          fi
        done
        
        # Test API endpoints (optional)
        api_endpoints=(
          "app/api/webhooks/sap/route.ts"
          "app/api/webhooks/sap/route.js"
        )
        
        webhook_found=false
        for endpoint in "${api_endpoints[@]}"; do
          if [ -f "$endpoint" ]; then
            echo "‚úÖ SAP webhook endpoint exists: $endpoint"
            webhook_found=true
            break
          fi
        done
        
        if [ "$webhook_found" = false ]; then
          echo "‚ÑπÔ∏è  SAP webhook endpoint not found - can be added later for n8n integration"
        fi
        
    - name: Notify n8n Build Result
      if: always()
      run: |
        STATUS="${{ job.status }}"
        if [ ! -z "${{ env.N8N_WEBHOOK_URL }}" ]; then
          curl -X POST "${{ env.N8N_WEBHOOK_URL }}/build-completed" \
            -H "Content-Type: application/json" \
            -d '{
              "platform": "SAPience ML Platform v2.0",
              "status": "'$STATUS'",
              "repository": "${{ github.repository }}",
              "commit_sha": "${{ github.sha }}",
              "build_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
            }' || echo "n8n webhook notification failed"
        else
          echo "N8N_WEBHOOK_URL not configured - skipping notification"
        fi

  deploy-preview:
    needs: build-and-test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: üåç Deploy Preview to Netlify
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for preview
      run: |
        npm run build
        echo "Preview build completed"
        
    - name: Deploy to Netlify Preview
      if: env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != ''
      uses: nwtgck/actions-netlify@v3.0
      id: netlify
      with:
        publish-dir: '.next'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "SAPience ML Platform - PR #${{ github.event.number }}: ${{ github.event.pull_request.title }}"
        alias: pr-${{ github.event.number }}
        enable-pull-request-comment: false
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
    - name: Comment PR with Preview
      if: steps.netlify.outputs.deploy-url
      uses: actions/github-script@v7
      env:
        PREVIEW_URL: ${{ steps.netlify.outputs.deploy-url }}
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üåç SAPience ML Platform Preview Ready!
            
            **Preview URL:** ${{ env.PREVIEW_URL }}
            
            ### üîó Quick Links
            - [üìä ML Dashboard](${{ env.PREVIEW_URL }}/#demo)
            - [ü§ñ PUP Predictions](${{ env.PREVIEW_URL }}/#demo)  
            - [‚öôÔ∏è SAP/n8n Integration](${{ env.PREVIEW_URL }}/integrations)
            - [üé¨ Live Demo](${{ env.PREVIEW_URL }}/demo)
            - [üí∞ Enterprise Pricing](${{ env.PREVIEW_URL }}/#pricing)
            
            ### üìã Test Checklist
            - [ ] SAPience visual identity
            - [ ] Dashboard interactivity
            - [ ] Mobile responsiveness
            - [ ] Page navigation
            - [ ] Component loading
            
            *Deployed from commit ${{ github.sha }}*`
          });

  deploy-production:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: üöÄ Deploy to Production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      env:
        NODE_ENV: production
      run: npm run build
      
    - name: Deploy to Netlify Production
      if: env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != ''
      uses: nwtgck/actions-netlify@v3.0
      id: netlify_prod
      with:
        publish-dir: '.next'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "üöÄ SAPience ML Platform v2.0 Production"
        enable-pull-request-comment: false
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          
    - name: Notify n8n Production Deploy
      if: always()
      run: |
        if [ ! -z "${{ env.N8N_WEBHOOK_URL }}" ]; then
          curl -X POST "${{ env.N8N_WEBHOOK_URL }}/production-deployed" \
            -H "Content-Type: application/json" \
            -d '{
              "platform": "SAPience ML Platform v2.0",
              "status": "success",
              "site_url": "${{ steps.netlify_prod.outputs.deploy-url || 'https://sapience.netlify.app' }}",
              "commit_sha": "${{ github.sha }}",
              "deployed_at": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
            }' || echo "n8n production notification failed"
        else
          echo "N8N_WEBHOOK_URL not configured - skipping notification"
        fi
