name: SAPience n8n Integration

on:
  repository_dispatch:
    types: [sapience-auto-test]
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]

env:
  N8N_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
  notify-n8n-start:
    runs-on: ubuntu-latest
    name: üöÄ Notify n8n Workflow Start
    steps:
    - name: Send Build Start to n8n
      run: |
        curl -X POST "${{ env.N8N_WEBHOOK_URL }}/build-started" \
          -H "Content-Type: application/json" \
          -d '{
            "event_type": "${{ github.event_name }}",
            "repository": "${{ github.repository }}",
            "ref": "${{ github.ref }}",
            "commit_sha": "${{ github.sha }}",
            "actor": "${{ github.actor }}",
            "pr_number": "${{ github.event.number }}",
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
          }'

  build-and-test:
    needs: notify-n8n-start
    runs-on: ubuntu-latest
    name: üî® Build & Test SAPience
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: |
        npm run test:unit || echo "No unit tests yet"
        npm run lint
        npm run type-check
        
    - name: Build application
      run: npm run build
      
    - name: Test SAP Integration
      run: |
        echo "üß™ Testing SAP connection endpoints..."
        # Test webhook endpoints
        if [ -f "app/api/webhooks/sap/route.ts" ]; then
          echo "‚úÖ SAP webhook endpoint exists"
        else
          echo "‚ö†Ô∏è  SAP webhook endpoint missing"
        fi
        
    - name: Notify n8n Build Result
      if: always()
      run: |
        STATUS="${{ job.status }}"
        curl -X POST "${{ env.N8N_WEBHOOK_URL }}/build-completed" \
          -H "Content-Type: application/json" \
          -d '{
            "status": "'$STATUS'",
            "repository": "${{ github.repository }}",
            "commit_sha": "${{ github.sha }}",
            "build_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
          }'

  deploy-preview:
    needs: build-and-test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: üåç Deploy Preview to Netlify
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for preview
      run: |
        npm run build
        echo "Preview build completed"
        
    - name: Deploy to Netlify Preview
      run: |
        npx netlify-cli deploy \
          --dir=.next \
          --site=${{ env.NETLIFY_SITE_ID }} \
          --auth=${{ env.NETLIFY_AUTH_TOKEN }} \
          --message="PR #${{ github.event.number }}: ${{ github.event.pull_request.title }}" > deploy_output.txt
        
        PREVIEW_URL=$(grep -o 'https://[^[:space:]]*--.*\.netlify\.app' deploy_output.txt)
        echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
        
    - name: Comment PR with Preview
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üåç Preview Deployment Ready!
            
            **Preview URL:** ${{ env.PREVIEW_URL }}
            
            ### üîó Quick Links
            - [üìä SAP Dashboard](${{ env.PREVIEW_URL }}/dashboard)
            - [ü§ñ AI Copilot](${{ env.PREVIEW_URL }}/copilot)  
            - [‚öôÔ∏è n8n Integration](${{ env.PREVIEW_URL }}/integrations)
            
            ### üìã Test Checklist
            - [ ] SAP data visualization
            - [ ] Claude AI responses
            - [ ] n8n webhook connectivity
            - [ ] Mobile responsiveness
            
            *Deployed from commit ${{ github.sha }}*`
          });

  deploy-production:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: üöÄ Deploy to Production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      env:
        NODE_ENV: production
        NEXT_PUBLIC_N8N_WEBHOOK_URL: ${{ secrets.NEXT_PUBLIC_N8N_WEBHOOK_URL }}
      run: npm run build
      
    - name: Deploy to Netlify Production
      run: |
        npx netlify-cli deploy \
          --prod \
          --dir=.next \
          --site=${{ env.NETLIFY_SITE_ID }} \
          --auth=${{ env.NETLIFY_AUTH_TOKEN }} \
          --message="Production deployment from main branch"
          
    - name: Notify n8n Production Deploy
      run: |
        curl -X POST "${{ env.N8N_WEBHOOK_URL }}/production-deployed" \
          -H "Content-Type: application/json" \
          -d '{
            "status": "success",
            "site_url": "https://sapience.netlify.app",
            "commit_sha": "${{ github.sha }}",
            "deployed_at": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
          }'