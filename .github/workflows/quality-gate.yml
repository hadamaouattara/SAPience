name: 🛡️ Quality Gate - Zero Error Deployment

on:
  push:
    branches: [ main, develop, fix/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-gate:
    name: 🔍 Quality Gate Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔍 Validate Project Structure
      run: |
        echo "🔍 Checking required files..."
        
        # Check essential files
        if [ ! -f "package.json" ]; then
          echo "❌ ERROR: package.json missing"
          exit 1
        fi
        
        if [ ! -f "app/page.jsx" ]; then
          echo "❌ ERROR: app/page.jsx missing"
          exit 1
        fi
        
        if [ ! -f "app/layout.jsx" ]; then
          echo "❌ ERROR: app/layout.jsx missing"
          exit 1
        fi
        
        # Check forbidden directories
        if [ -d "app/blobs" ]; then
          echo "❌ ERROR: app/blobs directory found - should be removed"
          exit 1
        fi
        
        if [ -d "app/image-cdn" ]; then
          echo "❌ ERROR: app/image-cdn directory found - should be removed"
          exit 1
        fi
        
        echo "✅ Project structure validation PASSED"
        
    - name: 🔍 Scan for Problematic Dependencies
      run: |
        echo "🔍 Scanning for problematic packages..."
        
        # Check package.json for forbidden dependencies
        FORBIDDEN_DEPS=("blobshape" "@netlify/blobs" "unique-names-generator")
        
        for dep in "${FORBIDDEN_DEPS[@]}"; do
          if grep -q "\"$dep\"" package.json; then
            echo "❌ ERROR: Forbidden dependency found: $dep"
            exit 1
          fi
        done
        
        echo "✅ Dependency scan PASSED"
        
    - name: 🔍 Validate Import Paths
      run: |
        echo "🔍 Validating import paths..."
        
        # Check for problematic imports in JS/JSX files
        PROBLEMATIC_IMPORTS=(
          "'../utils.js'"
          "'components/dashboard-preview'"
          "'blobshape'"
          "'@netlify/blobs'"
          "'unique-names-generator'"
        )
        
        for import in "${PROBLEMATIC_IMPORTS[@]}"; do
          if find . -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" | xargs grep -l "$import" 2>/dev/null; then
            echo "❌ ERROR: Problematic import found: $import"
            echo "Files containing this import:"
            find . -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" | xargs grep -l "$import"
            exit 1
          fi
        done
        
        echo "✅ Import validation PASSED"
        
    - name: 📦 Install dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm ci
        echo "✅ Dependencies installed successfully"
        
    - name: 🏗️ Test Build
      run: |
        echo "🏗️ Testing build process..."
        npm run build
        echo "✅ Build test PASSED"
        
    - name: 🧪 Run Tests (if available)
      run: |
        if [ -f "package.json" ] && grep -q '"test"' package.json; then
          echo "🧪 Running tests..."
          npm test -- --passWithNoTests
        else
          echo "ℹ️ No tests configured, skipping..."
        fi
        
    - name: ✅ Quality Gate PASSED
      run: |
        echo "🎉 =========================================="
        echo "🎉 QUALITY GATE VALIDATION SUCCESSFUL!"
        echo "🎉 =========================================="
        echo "✅ Project structure: VALID"
        echo "✅ Dependencies: CLEAN"
        echo "✅ Imports: VALID"
        echo "✅ Build: SUCCESSFUL"
        echo "🚀 DEPLOYMENT AUTHORIZED!"
        
  notify-success:
    name: 📢 Success Notification
    runs-on: ubuntu-latest
    needs: quality-gate
    if: success()
    
    steps:
    - name: 🎉 Deployment Ready
      run: |
        echo "🎯 QUALITY GATE PASSED - DEPLOYMENT READY!"
        echo "🛡️ Zero Error Deployment System: ACTIVE"
        echo "📊 SAPience ML Platform: VALIDATED"