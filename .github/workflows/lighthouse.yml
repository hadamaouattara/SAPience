name: Lighthouse Performance Audit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Serve application
        run: |
          npm start &
          sleep 10
        env:
          PORT: 3000
      
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/about
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
      
      - name: Comment PR with Lighthouse results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const resultsPath = './.lighthouseci/lhr-*.json';
              const results = fs.readdirSync('./.lighthouseci')
                .filter(file => file.startsWith('lhr-') && file.endsWith('.json'))
                .map(file => {
                  const content = fs.readFileSync(path.join('./.lighthouseci', file), 'utf8');
                  return JSON.parse(content);
                });
              
              if (results.length > 0) {
                const result = results[0];
                const scores = {
                  performance: Math.round(result.categories.performance.score * 100),
                  accessibility: Math.round(result.categories.accessibility.score * 100),
                  'best-practices': Math.round(result.categories['best-practices'].score * 100),
                  seo: Math.round(result.categories.seo.score * 100)
                };
                
                const getEmoji = (score) => {
                  if (score >= 90) return '🟢';
                  if (score >= 50) return '🟡';
                  return '🔴';
                };
                
                const body = `## 🔍 Lighthouse Performance Report
                
                | Category | Score | Status |
                |----------|-------|--------|
                | Performance | ${scores.performance} | ${getEmoji(scores.performance)} |
                | Accessibility | ${scores.accessibility} | ${getEmoji(scores.accessibility)} |
                | Best Practices | ${scores['best-practices']} | ${getEmoji(scores['best-practices'])} |
                | SEO | ${scores.seo} | ${getEmoji(scores.seo)} |
                
                **Overall Performance**: ${scores.performance >= 90 ? '✅ Excellent' : scores.performance >= 50 ? '⚠️ Needs Improvement' : '❌ Poor'}
                
                > Results generated by Lighthouse CI`;
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: body
                });
              }
            } catch (error) {
              console.log('Could not parse Lighthouse results:', error);
            }